<% include ./partials/header %>

<script type="text/javascript" src="/js/rellax.js"></script>

<script type="application/ld+json">
{
  "@context": "http://www.uzespace.com",
  "@type": "Platform",
  "url": "http://www.uzespace.com",
  "name": "uzespace storage stacking sharing",
  "contactPoint": {
    "@type": "ContactPoint",
    "telephone": "+1-213-273-5476",
    "contactType": "Customer service"
  }
}
</script>

<div id="_header">
  <label id="_headtitle">A better storage awaits</label>
  <label id="_headtitle_mobile">A better storage awaits</label>
  <button id="_headerDirect" class="btn btn-outline-light _headerDirect1">Get Started</button>
  <a id="_headerDirect" target="_blank" href="https://brucewayne1648.typeform.com/to/cbLdUh" class="btn btn-outline-light _headerDirect2">Get 20$</a>

  <script type="text/javascript">
    $("._headerDirect1").click(function() {
      $('html, body').animate({
          scrollTop: $("#_indexButtonBlock").offset().top
      }, 2800);
    });
  </script>
  
</div>

<div class="container _main _textCenter">
  <!-- <a href="/test">Test process</a> -->
  <!-- ========================= MAP =================== -->

    <input id="pac-input" type="text" placeholder="Search Box">
    <div id="map"></div>

    <script>
      function initAutocomplete() {
        // var map = new google.maps.Map(document.getElementById('map'), {
        //   center: {lat: 34.0227, lng: -118.28},
        //   zoom: 13.3
        //   // mapTypeId: 'roadmap'
        // });

        var map;

        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 34.0227, lng: -118.28},
          zoom: 14.5
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });

        navigator.geolocation.getCurrentPosition(function(position){
          var latitude  = position.coords.latitude;
          var longitude = position.coords.longitude;     

        } , function() {
          error();
        });     
      }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCiZJGNbzddhCp0Y4esDRwEHuHm7TJ5oG8&libraries=places&callback=initAutocomplete"
         async defer></script>
        <!-- <script>
          function initMap() {
            var uluru = {lat: , lng: };
            var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 13,
              center: uluru
            });

            var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';

            //customize marker
            var image={
              // url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',
              url: "/img/mapIcon.png",
              size: new google.maps.Size(84, 84),
              // The origin for this image is (0, 0).
              origin: new google.maps.Point(0, 0),
              // The anchor for this image is the base of the flagpole at (0, 32).
              anchor: new google.maps.Point(0, 0)
            }
         //    var shape = {
            //   coords: [1, 1, 1, 20, 18, 20, 18, 1],
            //   type: 'poly'
            // };
            var marker = new google.maps.Marker({
              position: uluru,
              map: map,
              icon: "/img/mapIcon.png"
              });
          }
        </script> -->

        <!-- previous map -->
        <!-- <script type="text/javascript">

          var map;
          function initMap(){
            function success(position){
              
            }

            function error(){
              console.log("geolocation not suscessful");
            }

            if(!navigator.geolocation){
              console.log('geolocation not supported in the browser');
              map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 34.0227, lng: -118.28},
                zoom: 13.3
              });
            }else{
              console.log('geolocation supported');
              navigator.geolocation.getCurrentPosition(function(position){
                console.log('success');
                var latitude  = position.coords.latitude;
                var longitude = position.coords.longitude;

                map = new google.maps.Map(document.getElementById('map'), {
                  center: {lat: latitude, lng: longitude},
                  zoom: 13
                });
              } , function() {
                error();
              });
            }
            
            // var map = new google.maps.Map(document.getElementById('map'), {
            //   zoom: 13,
            //   center: {lat: 34.0227, lng: -118.28}
            // });

            }   
        </script> -->
      <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
      </script>
      <!-- <script src="https://maps.googleapis.com/maps/api/js?key=&libraries=places&callback=initAutocomplete"
         async defer></script> -->
      <!-- ============================== map ends ===================== -->

      <p></p>
      <div id="_indexButtonBlock" style="">
        <a href="/demand" class="btn btn-outline-primary" id="_indexButtonL">I WANT space</a>
        <a href="/supply" class="btn btn-outline-dark" id="_indexButtonR">I HAVE space</a>
      </div>

      <!-- <form class="_donateButton" action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
        <input type="hidden" name="cmd" value="_s-xclick">
        <input type="hidden" name="hosted_button_id" value="CSZE5ZW9J6LYN">
        <input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!">
        <img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
      </form> -->


<% include ./partials/footer %>